<div id="contact-type-form">
  <h2 id="contact-type-label"><label>2. Select all relevant contacts</label><span class="red-letter"> *</span></h2>
  <p>Choose from the available options below by searching or selecting from the dropdown menu.</p>
  <% if controller.controller_name == 'casa_cases' %>
    <div class="row">
      <div class="col-sm">
        <a class="main-btn primary-btn-outline btn-hover btn-sm" id="check_all" onClick="checkContactTypes()">Check All</a>
        <a class="main-btn primary-btn-outline btn-hover btn-sm" id="uncheck_all" onClick="uncheckContactTypes()">Uncheck All</a>
      </div>
    </div>
  <% end %>
  <% default_checked = defined?(@casa_case) ? @casa_case.contact_types.empty? : true %>
  <div class = "select-contact-type clearfix" onClick = "showContactTypesList()">
    <%= text_field_tag 'search', nil, placeholder: 'Select or search for contacts', class: 'contact-types-select w-100 w-sm-100' %>
    <i class="fa-solid fa-chevron-down" id = "down-arrow"></i>
  </div>
  <ul class = "contact-types-list">
    <li class="align-top d-inline-block pr-5 pl-5 pb-4">
      <% @contact_types.alphabetically.filter do |ct|
              selected_case_contact_types.blank? ||
                  selected_case_contact_types.include?(ct)
            end.each do |contact_type| %>
        <div class="form-check checkbox-style mb-1">
          <%=
                contact_type_exists = default_checked ? true : @casa_case.contact_types.include?(contact_type)
                contact_type_exists = false unless controller.controller_name == 'casa_cases'

                check_box_tag checkbox_tag_name,
                  contact_type.id,
                  model.decorate.show_contact_type?(contact_type.id),
                  checked: contact_type_exists,
                  id: dom_id(contact_type, :case_contact),
                  class: ["form-check-input", "case-contact-contact-type"]
              %>
          <label class="form-check-label" for="<%= dom_id(contact_type, :case_contact) %>">
            <%= contact_type.name %>
          </label>
          <% if @casa_cases %>
            <span style="color: #93903C;">
              <%= time_ago_of_last_contact_made_of(
                    contact_type.name,
                    @casa_cases.sort_by(&:created_at).last
                  ) %>
            </span>
          <% end %>
        </div>
      <% end %>
    </li>
  </ul>
</div>
<script type="text/javascript">
  function checkContactTypes(){
    var contact_type_boxes = document.getElementsByName("casa_case[casa_case_contact_types_attributes][][contact_type_id]")
    for (checkbox of contact_type_boxes){
      checkbox.checked = true
    }
  }

  function uncheckContactTypes(){
    var contact_type_boxes = document.getElementsByName("casa_case[casa_case_contact_types_attributes][][contact_type_id]")
    for (checkbox of contact_type_boxes){
        checkbox.checked = false
    }
  }

  function showContactTypesList() {
    const contactTypesList = document.getElementsByClassName("contact-types-list")[0]
    if(contactTypesList.style.display == "block") {
      contactTypesList.style.display = "none"
    } else {
      contactTypesList.style.display = "block"
    }
  }

  document.addEventListener("DOMContentLoaded", () => {
    const checkboxes = document.querySelectorAll('.case-contact-contact-type')
    checkboxes.forEach((checkbox => {
      checkbox.addEventListener('change', (event) => {
        const label = document.querySelector('label[for="' + event.target.id + '"]');
        const labelText = label.textContent.trim()
        if (checkbox.checked) {
          addLabelPill(labelText, checkbox)
          const contactTypeSearchBox = document.getElementsByClassName('contact-types-select')[0]
          contactTypeSearchBox.placeholder = ''
        } else {
          removeLabelPill(labelText, checkbox)
        }
      });
    }));
  });

  function addLabelPill(labelContent, checkbox) {
    const contactTypeList = document.getElementsByClassName("select-contact-type")[0]
    const label = document.createElement("span")
    label.textContent = labelContent
    label.classList.add("label-pill")
    const crossIcon = document.createElement("i")
    crossIcon.classList.add("fa-solid", "fa-circle-xmark", "contact-cross-sign")
    label.appendChild(crossIcon)
    closeLabelPillAndUncheck(contactTypeList, crossIcon, checkbox)
    contactTypeList.appendChild(label)
  }

  function removeLabelPill(labelContent, checkbox) {
    const labelPills = document.querySelectorAll('.label-pill');
    const contactTypeSearch = document.getElementsByClassName('select-contact-type')[0]
    labelPills.forEach((pill => {
      if (pill.innerText === labelContent) {
        contactTypeSearch.removeChild(pill)
      }
      checkbox.checked = false
    }))
  }

  function closeLabelPillAndUncheck(list, sign, checkbox) {
    sign.addEventListener('click', () => {
      labelPill = sign.parentElement
      checkbox.checked = false
      list.removeChild(labelPill)
      list.onclick = null;
    })
  }
</script>
